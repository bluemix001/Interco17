[{"id":"96955780.7923b","type":"function","z":"a9f32ae8.a1003","name":"set payload ","func":"/*output=msg.payload;\nmsg.payload = {};\nmsg.payload.output = {text: [output]}\nmsg.payload.context={twitter: {handle:\"@lindacmgross1\",DM:true}}\nnode.warn(msg.payload.context);\n*/\nnode.warn(\"Conversation output is:\\n\" + JSON.stringify(msg.payload))\n\nif (msg.payload.output && msg.payload.output.text) {\n output = msg.payload.output.text.join(' ');\n \n}\n\nnode.warn(\"Cleaned conversation output: \\n\" + output)\nmsg.payload = output;\nnode.send(msg);","outputs":"1","noerr":0,"x":828.4398193359375,"y":847.4073486328125,"wires":[["895057a4.2917b"]]},{"id":"550407c4.9d6ec8","type":"function","z":"a9f32ae8.a1003","name":"add emotion to context","func":"var emotions = [];\nvar threshold = 0.5;\nvar topemotion ='';\n\n// simplify object returned by tone analyser to only the emotion tones\nemotions = msg.response.document_tone.tone_categories\n .filter(function(c){\n if (c.category_id == \"emotion_tone\")\n {return c; }\n })[0].tones;\n \n\nnode.warn(\"Detected tones: \\n\" + JSON.stringify(emotions));\n\n// find highest score and return that tone name, if that score is greater than the threshold\ntopemotion = emotions.reduce(function(a, b){ return a.score > b.score ? a : b; });\n\nif (topemotion.score > threshold) {\n topemotion = topemotion.tone_name;\n} else {\n topemotion = \"neutral\";\n}\n\n\n// add top emotion to conversation context\nmsg.additional_context = { emotion: topemotion };\n\nnode.warn(\"Emotion added to conversation context:\\n \" + topemotion); \n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":446,"y":863,"wires":[["186c4804.cc4af8"]]},{"id":"186c4804.cc4af8","type":"watson-conversation-v1","z":"a9f32ae8.a1003","name":"","workspaceid":"70aea7a1-c3ab-483b-9e1c-098b29ed42ea","multiuser":false,"context":true,"x":662,"y":853,"wires":[["96955780.7923b"]]}]